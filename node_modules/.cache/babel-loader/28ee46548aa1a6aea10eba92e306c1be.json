{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"className\", \"style\", \"prefix\", \"split\", \"notFoundContent\", \"value\", \"defaultValue\", \"children\", \"open\", \"validateSearch\", \"filterOption\", \"onChange\", \"onKeyDown\", \"onKeyUp\", \"onPressEnter\", \"onSearch\", \"onSelect\", \"onFocus\", \"onBlur\", \"transitionName\", \"placement\", \"direction\", \"getPopupContainer\", \"dropdownClassName\"];\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport TextArea from 'rc-textarea';\nimport KeywordTrigger from './KeywordTrigger';\nimport MentionsContext from './MentionsContext';\nimport Option from './Option';\nimport { filterOption as defaultFilterOption, getBeforeSelectionText, getLastMeasureIndex, replaceWithMeasure, setInputSelection, validateSearch as defaultValidateSearch } from './util';\nimport useEffectState from './hooks/useEffectState';\nvar Mentions = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n      className = props.className,\n      style = props.style,\n      prefix = props.prefix,\n      split = props.split,\n      notFoundContent = props.notFoundContent,\n      value = props.value,\n      defaultValue = props.defaultValue,\n      children = props.children,\n      open = props.open,\n      validateSearch = props.validateSearch,\n      filterOption = props.filterOption,\n      onChange = props.onChange,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      onPressEnter = props.onPressEnter,\n      onSearch = props.onSearch,\n      onSelect = props.onSelect,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      transitionName = props.transitionName,\n      placement = props.placement,\n      direction = props.direction,\n      getPopupContainer = props.getPopupContainer,\n      dropdownClassName = props.dropdownClassName,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var mergedPrefix = Array.isArray(prefix) ? prefix : [prefix];\n\n  var mergedProps = _objectSpread(_objectSpread({}, props), {}, {\n    prefix: mergedPrefix\n  }); // =============================== Refs ===============================\n\n\n  var textareaRef = useRef(null);\n  var measureRef = useRef(null);\n\n  var getTextArea = function getTextArea() {\n    var _textareaRef$current, _textareaRef$current$;\n\n    return (_textareaRef$current = textareaRef.current) === null || _textareaRef$current === void 0 ? void 0 : (_textareaRef$current$ = _textareaRef$current.resizableTextArea) === null || _textareaRef$current$ === void 0 ? void 0 : _textareaRef$current$.textArea;\n  };\n\n  React.useImperativeHandle(ref, function () {\n    var _textareaRef$current4, _textareaRef$current5;\n\n    return {\n      focus: function focus() {\n        var _textareaRef$current2;\n\n        return (_textareaRef$current2 = textareaRef.current) === null || _textareaRef$current2 === void 0 ? void 0 : _textareaRef$current2.focus();\n      },\n      blur: function blur() {\n        var _textareaRef$current3;\n\n        return (_textareaRef$current3 = textareaRef.current) === null || _textareaRef$current3 === void 0 ? void 0 : _textareaRef$current3.blur();\n      },\n      textarea: (_textareaRef$current4 = textareaRef.current) === null || _textareaRef$current4 === void 0 ? void 0 : (_textareaRef$current5 = _textareaRef$current4.resizableTextArea) === null || _textareaRef$current5 === void 0 ? void 0 : _textareaRef$current5.textArea\n    };\n  }); // ============================== State ===============================\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      measuring = _useState2[0],\n      setMeasuring = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      measureText = _useState4[0],\n      setMeasureText = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      measurePrefix = _useState6[0],\n      setMeasurePrefix = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      measureLocation = _useState8[0],\n      setMeasureLocation = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      activeIndex = _useState10[0],\n      setActiveIndex = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isFocus = _useState12[0],\n      setIsFocus = _useState12[1]; // ============================== Value ===============================\n\n\n  var _useMergedState = useMergedState('', {\n    defaultValue: defaultValue,\n    value: value\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedValue = _useMergedState2[0],\n      setMergedValue = _useMergedState2[1]; // =============================== Open ===============================\n\n\n  useEffect(function () {\n    // Sync measure div top with textarea for rc-trigger usage\n    if (measuring && measureRef.current) {\n      measureRef.current.scrollTop = getTextArea().scrollTop;\n    }\n  }, [measuring]);\n\n  var _React$useMemo = React.useMemo(function () {\n    if (open) {\n      if (process.env.NODE_ENV !== 'production') {\n        warning(false, '`open` of Mentions is only used for debug usage. Do not use in you production.');\n      }\n\n      for (var i = 0; i < mergedPrefix.length; i += 1) {\n        var curPrefix = mergedPrefix[i];\n        var index = mergedValue.lastIndexOf(curPrefix);\n\n        if (index >= 0) {\n          return [true, '', curPrefix, index];\n        }\n      }\n    }\n\n    return [measuring, measureText, measurePrefix, measureLocation];\n  }, [open, measuring, mergedPrefix, mergedValue, measureText, measurePrefix, measureLocation]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 4),\n      mergedMeasuring = _React$useMemo2[0],\n      mergedMeasureText = _React$useMemo2[1],\n      mergedMeasurePrefix = _React$useMemo2[2],\n      mergedMeasureLocation = _React$useMemo2[3]; // ============================== Option ==============================\n\n\n  var getOptions = React.useCallback(function (targetMeasureText) {\n    var list = toArray(children).map(function (_ref) {\n      var optionProps = _ref.props,\n          key = _ref.key;\n      return _objectSpread(_objectSpread({}, optionProps), {}, {\n        key: key || optionProps.value\n      });\n    }).filter(function (option) {\n      /** Return all result if `filterOption` is false. */\n      if (filterOption === false) {\n        return true;\n      }\n\n      return filterOption(targetMeasureText, option);\n    });\n    return list;\n  }, [children, filterOption]);\n  var options = React.useMemo(function () {\n    return getOptions(mergedMeasureText);\n  }, [getOptions, mergedMeasureText]); // ============================= Measure ==============================\n  // Mark that we will reset input selection to target position when user select option\n\n  var onSelectionEffect = useEffectState();\n\n  var startMeasure = function startMeasure(nextMeasureText, nextMeasurePrefix, nextMeasureLocation) {\n    setMeasuring(true);\n    setMeasureText(nextMeasureText);\n    setMeasurePrefix(nextMeasurePrefix);\n    setMeasureLocation(nextMeasureLocation);\n    setActiveIndex(0);\n  };\n\n  var stopMeasure = function stopMeasure(callback) {\n    setMeasuring(false);\n    setMeasureLocation(0);\n    setMeasureText('');\n    onSelectionEffect(callback);\n  }; // ============================== Change ==============================\n\n\n  var triggerChange = function triggerChange(nextValue) {\n    setMergedValue(nextValue);\n    onChange === null || onChange === void 0 ? void 0 : onChange(nextValue);\n  };\n\n  var onInternalChange = function onInternalChange(_ref2) {\n    var nextValue = _ref2.target.value;\n    triggerChange(nextValue);\n  };\n\n  var selectOption = function selectOption(option) {\n    var _getTextArea;\n\n    var _option$value = option.value,\n        mentionValue = _option$value === void 0 ? '' : _option$value;\n\n    var _replaceWithMeasure = replaceWithMeasure(mergedValue, {\n      measureLocation: mergedMeasureLocation,\n      targetText: mentionValue,\n      prefix: mergedMeasurePrefix,\n      selectionStart: (_getTextArea = getTextArea()) === null || _getTextArea === void 0 ? void 0 : _getTextArea.selectionStart,\n      split: split\n    }),\n        text = _replaceWithMeasure.text,\n        selectionLocation = _replaceWithMeasure.selectionLocation;\n\n    triggerChange(text);\n    stopMeasure(function () {\n      // We need restore the selection position\n      setInputSelection(getTextArea(), selectionLocation);\n    });\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(option, mergedMeasurePrefix);\n  }; // ============================= KeyEvent =============================\n  // Check if hit the measure keyword\n\n\n  var onInternalKeyDown = function onInternalKeyDown(event) {\n    var which = event.which;\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event); // Skip if not measuring\n\n    if (!mergedMeasuring) {\n      return;\n    }\n\n    if (which === KeyCode.UP || which === KeyCode.DOWN) {\n      // Control arrow function\n      var optionLen = options.length;\n      var offset = which === KeyCode.UP ? -1 : 1;\n      var newActiveIndex = (activeIndex + offset + optionLen) % optionLen;\n      setActiveIndex(newActiveIndex);\n      event.preventDefault();\n    } else if (which === KeyCode.ESC) {\n      stopMeasure();\n    } else if (which === KeyCode.ENTER) {\n      // Measure hit\n      event.preventDefault();\n\n      if (!options.length) {\n        stopMeasure();\n        return;\n      }\n\n      var option = options[activeIndex];\n      selectOption(option);\n    }\n  };\n  /**\n   * When to start measure:\n   * 1. When user press `prefix`\n   * 2. When measureText !== prevMeasureText\n   *  - If measure hit\n   *  - If measuring\n   *\n   * When to stop measure:\n   * 1. Selection is out of range\n   * 2. Contains `space`\n   * 3. ESC or select one\n   */\n\n\n  var onInternalKeyUp = function onInternalKeyUp(event) {\n    var key = event.key,\n        which = event.which;\n    var target = event.target;\n    var selectionStartText = getBeforeSelectionText(target);\n\n    var _getLastMeasureIndex = getLastMeasureIndex(selectionStartText, mergedPrefix),\n        measureIndex = _getLastMeasureIndex.location,\n        nextMeasurePrefix = _getLastMeasureIndex.prefix; // If the client implements an onKeyUp handler, call it\n\n\n    onKeyUp === null || onKeyUp === void 0 ? void 0 : onKeyUp(event); // Skip if match the white key list\n\n    if ([KeyCode.ESC, KeyCode.UP, KeyCode.DOWN, KeyCode.ENTER].indexOf(which) !== -1) {\n      return;\n    }\n\n    if (measureIndex !== -1) {\n      var nextMeasureText = selectionStartText.slice(measureIndex + nextMeasurePrefix.length);\n      var validateMeasure = validateSearch(nextMeasureText, mergedProps);\n      var matchOption = !!getOptions(nextMeasureText).length;\n\n      if (validateMeasure) {\n        if (key === nextMeasurePrefix || key === 'Shift' || mergedMeasuring || nextMeasureText !== mergedMeasureText && matchOption) {\n          startMeasure(nextMeasureText, nextMeasurePrefix, measureIndex);\n        }\n      } else if (mergedMeasuring) {\n        // Stop if measureText is invalidate\n        stopMeasure();\n      }\n      /**\n       * We will trigger `onSearch` to developer since they may use for async update.\n       * If met `space` means user finished searching.\n       */\n\n\n      if (onSearch && validateMeasure) {\n        onSearch(nextMeasureText, nextMeasurePrefix);\n      }\n    } else if (mergedMeasuring) {\n      stopMeasure();\n    }\n  };\n\n  var onInternalPressEnter = function onInternalPressEnter(event) {\n    if (!mergedMeasuring && onPressEnter) {\n      onPressEnter(event);\n    }\n  }; // ============================ Focus Blur ============================\n\n\n  var focusRef = useRef();\n\n  var onInternalFocus = function onInternalFocus(event) {\n    window.clearTimeout(focusRef.current);\n\n    if (!isFocus && event && onFocus) {\n      onFocus(event);\n    }\n\n    setIsFocus(true);\n  };\n\n  var onInternalBlur = function onInternalBlur(event) {\n    focusRef.current = window.setTimeout(function () {\n      setIsFocus(false);\n      stopMeasure();\n      onBlur === null || onBlur === void 0 ? void 0 : onBlur(event);\n    }, 0);\n  };\n\n  var onDropdownFocus = function onDropdownFocus() {\n    onInternalFocus();\n  };\n\n  var onDropdownBlur = function onDropdownBlur() {\n    onInternalBlur();\n  }; // ============================== Render ==============================\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(prefixCls, className),\n    style: style\n  }, /*#__PURE__*/React.createElement(TextArea, _extends({\n    ref: textareaRef,\n    value: mergedValue\n  }, restProps, {\n    onChange: onInternalChange,\n    onKeyDown: onInternalKeyDown,\n    onKeyUp: onInternalKeyUp,\n    onPressEnter: onInternalPressEnter,\n    onFocus: onInternalFocus,\n    onBlur: onInternalBlur\n  })), mergedMeasuring && /*#__PURE__*/React.createElement(\"div\", {\n    ref: measureRef,\n    className: \"\".concat(prefixCls, \"-measure\")\n  }, mergedValue.slice(0, mergedMeasureLocation), /*#__PURE__*/React.createElement(MentionsContext.Provider, {\n    value: {\n      notFoundContent: notFoundContent,\n      activeIndex: activeIndex,\n      setActiveIndex: setActiveIndex,\n      selectOption: selectOption,\n      onFocus: onDropdownFocus,\n      onBlur: onDropdownBlur\n    }\n  }, /*#__PURE__*/React.createElement(KeywordTrigger, {\n    prefixCls: prefixCls,\n    transitionName: transitionName,\n    placement: placement,\n    direction: direction,\n    options: options,\n    visible: true,\n    getPopupContainer: getPopupContainer,\n    dropdownClassName: dropdownClassName\n  }, /*#__PURE__*/React.createElement(\"span\", null, mergedMeasurePrefix))), mergedValue.slice(mergedMeasureLocation + mergedMeasurePrefix.length)));\n});\nMentions.defaultProps = {\n  prefixCls: 'rc-mentions',\n  prefix: '@',\n  split: ' ',\n  validateSearch: defaultValidateSearch,\n  filterOption: defaultFilterOption,\n  notFoundContent: 'Not Found',\n  rows: 1\n};\nMentions.Option = Option;\nexport default Mentions;","map":{"version":3,"sources":["/Users/nelson.lin/nelson-test/TaskList/node_modules/rc-mentions/es/Mentions.js"],"names":["_extends","_slicedToArray","_objectSpread","_objectWithoutProperties","_excluded","classNames","useMergedState","toArray","KeyCode","warning","React","useState","useRef","useEffect","TextArea","KeywordTrigger","MentionsContext","Option","filterOption","defaultFilterOption","getBeforeSelectionText","getLastMeasureIndex","replaceWithMeasure","setInputSelection","validateSearch","defaultValidateSearch","useEffectState","Mentions","forwardRef","props","ref","prefixCls","className","style","prefix","split","notFoundContent","value","defaultValue","children","open","onChange","onKeyDown","onKeyUp","onPressEnter","onSearch","onSelect","onFocus","onBlur","transitionName","placement","direction","getPopupContainer","dropdownClassName","restProps","mergedPrefix","Array","isArray","mergedProps","textareaRef","measureRef","getTextArea","_textareaRef$current","_textareaRef$current$","current","resizableTextArea","textArea","useImperativeHandle","_textareaRef$current4","_textareaRef$current5","focus","_textareaRef$current2","blur","_textareaRef$current3","textarea","_useState","_useState2","measuring","setMeasuring","_useState3","_useState4","measureText","setMeasureText","_useState5","_useState6","measurePrefix","setMeasurePrefix","_useState7","_useState8","measureLocation","setMeasureLocation","_useState9","_useState10","activeIndex","setActiveIndex","_useState11","_useState12","isFocus","setIsFocus","_useMergedState","_useMergedState2","mergedValue","setMergedValue","scrollTop","_React$useMemo","useMemo","process","env","NODE_ENV","i","length","curPrefix","index","lastIndexOf","_React$useMemo2","mergedMeasuring","mergedMeasureText","mergedMeasurePrefix","mergedMeasureLocation","getOptions","useCallback","targetMeasureText","list","map","_ref","optionProps","key","filter","option","options","onSelectionEffect","startMeasure","nextMeasureText","nextMeasurePrefix","nextMeasureLocation","stopMeasure","callback","triggerChange","nextValue","onInternalChange","_ref2","target","selectOption","_getTextArea","_option$value","mentionValue","_replaceWithMeasure","targetText","selectionStart","text","selectionLocation","onInternalKeyDown","event","which","UP","DOWN","optionLen","offset","newActiveIndex","preventDefault","ESC","ENTER","onInternalKeyUp","selectionStartText","_getLastMeasureIndex","measureIndex","location","indexOf","slice","validateMeasure","matchOption","onInternalPressEnter","focusRef","onInternalFocus","window","clearTimeout","onInternalBlur","setTimeout","onDropdownFocus","onDropdownBlur","createElement","concat","Provider","visible","defaultProps","rows"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"className\", \"style\", \"prefix\", \"split\", \"notFoundContent\", \"value\", \"defaultValue\", \"children\", \"open\", \"validateSearch\", \"filterOption\", \"onChange\", \"onKeyDown\", \"onKeyUp\", \"onPressEnter\", \"onSearch\", \"onSelect\", \"onFocus\", \"onBlur\", \"transitionName\", \"placement\", \"direction\", \"getPopupContainer\", \"dropdownClassName\"];\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport TextArea from 'rc-textarea';\nimport KeywordTrigger from './KeywordTrigger';\nimport MentionsContext from './MentionsContext';\nimport Option from './Option';\nimport { filterOption as defaultFilterOption, getBeforeSelectionText, getLastMeasureIndex, replaceWithMeasure, setInputSelection, validateSearch as defaultValidateSearch } from './util';\nimport useEffectState from './hooks/useEffectState';\nvar Mentions = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var prefixCls = props.prefixCls,\n      className = props.className,\n      style = props.style,\n      prefix = props.prefix,\n      split = props.split,\n      notFoundContent = props.notFoundContent,\n      value = props.value,\n      defaultValue = props.defaultValue,\n      children = props.children,\n      open = props.open,\n      validateSearch = props.validateSearch,\n      filterOption = props.filterOption,\n      onChange = props.onChange,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      onPressEnter = props.onPressEnter,\n      onSearch = props.onSearch,\n      onSelect = props.onSelect,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      transitionName = props.transitionName,\n      placement = props.placement,\n      direction = props.direction,\n      getPopupContainer = props.getPopupContainer,\n      dropdownClassName = props.dropdownClassName,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var mergedPrefix = Array.isArray(prefix) ? prefix : [prefix];\n\n  var mergedProps = _objectSpread(_objectSpread({}, props), {}, {\n    prefix: mergedPrefix\n  }); // =============================== Refs ===============================\n\n\n  var textareaRef = useRef(null);\n  var measureRef = useRef(null);\n\n  var getTextArea = function getTextArea() {\n    var _textareaRef$current, _textareaRef$current$;\n\n    return (_textareaRef$current = textareaRef.current) === null || _textareaRef$current === void 0 ? void 0 : (_textareaRef$current$ = _textareaRef$current.resizableTextArea) === null || _textareaRef$current$ === void 0 ? void 0 : _textareaRef$current$.textArea;\n  };\n\n  React.useImperativeHandle(ref, function () {\n    var _textareaRef$current4, _textareaRef$current5;\n\n    return {\n      focus: function focus() {\n        var _textareaRef$current2;\n\n        return (_textareaRef$current2 = textareaRef.current) === null || _textareaRef$current2 === void 0 ? void 0 : _textareaRef$current2.focus();\n      },\n      blur: function blur() {\n        var _textareaRef$current3;\n\n        return (_textareaRef$current3 = textareaRef.current) === null || _textareaRef$current3 === void 0 ? void 0 : _textareaRef$current3.blur();\n      },\n      textarea: (_textareaRef$current4 = textareaRef.current) === null || _textareaRef$current4 === void 0 ? void 0 : (_textareaRef$current5 = _textareaRef$current4.resizableTextArea) === null || _textareaRef$current5 === void 0 ? void 0 : _textareaRef$current5.textArea\n    };\n  }); // ============================== State ===============================\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      measuring = _useState2[0],\n      setMeasuring = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      measureText = _useState4[0],\n      setMeasureText = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      measurePrefix = _useState6[0],\n      setMeasurePrefix = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      measureLocation = _useState8[0],\n      setMeasureLocation = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      activeIndex = _useState10[0],\n      setActiveIndex = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isFocus = _useState12[0],\n      setIsFocus = _useState12[1]; // ============================== Value ===============================\n\n\n  var _useMergedState = useMergedState('', {\n    defaultValue: defaultValue,\n    value: value\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedValue = _useMergedState2[0],\n      setMergedValue = _useMergedState2[1]; // =============================== Open ===============================\n\n\n  useEffect(function () {\n    // Sync measure div top with textarea for rc-trigger usage\n    if (measuring && measureRef.current) {\n      measureRef.current.scrollTop = getTextArea().scrollTop;\n    }\n  }, [measuring]);\n\n  var _React$useMemo = React.useMemo(function () {\n    if (open) {\n      if (process.env.NODE_ENV !== 'production') {\n        warning(false, '`open` of Mentions is only used for debug usage. Do not use in you production.');\n      }\n\n      for (var i = 0; i < mergedPrefix.length; i += 1) {\n        var curPrefix = mergedPrefix[i];\n        var index = mergedValue.lastIndexOf(curPrefix);\n\n        if (index >= 0) {\n          return [true, '', curPrefix, index];\n        }\n      }\n    }\n\n    return [measuring, measureText, measurePrefix, measureLocation];\n  }, [open, measuring, mergedPrefix, mergedValue, measureText, measurePrefix, measureLocation]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 4),\n      mergedMeasuring = _React$useMemo2[0],\n      mergedMeasureText = _React$useMemo2[1],\n      mergedMeasurePrefix = _React$useMemo2[2],\n      mergedMeasureLocation = _React$useMemo2[3]; // ============================== Option ==============================\n\n\n  var getOptions = React.useCallback(function (targetMeasureText) {\n    var list = toArray(children).map(function (_ref) {\n      var optionProps = _ref.props,\n          key = _ref.key;\n      return _objectSpread(_objectSpread({}, optionProps), {}, {\n        key: key || optionProps.value\n      });\n    }).filter(function (option) {\n      /** Return all result if `filterOption` is false. */\n      if (filterOption === false) {\n        return true;\n      }\n\n      return filterOption(targetMeasureText, option);\n    });\n    return list;\n  }, [children, filterOption]);\n  var options = React.useMemo(function () {\n    return getOptions(mergedMeasureText);\n  }, [getOptions, mergedMeasureText]); // ============================= Measure ==============================\n  // Mark that we will reset input selection to target position when user select option\n\n  var onSelectionEffect = useEffectState();\n\n  var startMeasure = function startMeasure(nextMeasureText, nextMeasurePrefix, nextMeasureLocation) {\n    setMeasuring(true);\n    setMeasureText(nextMeasureText);\n    setMeasurePrefix(nextMeasurePrefix);\n    setMeasureLocation(nextMeasureLocation);\n    setActiveIndex(0);\n  };\n\n  var stopMeasure = function stopMeasure(callback) {\n    setMeasuring(false);\n    setMeasureLocation(0);\n    setMeasureText('');\n    onSelectionEffect(callback);\n  }; // ============================== Change ==============================\n\n\n  var triggerChange = function triggerChange(nextValue) {\n    setMergedValue(nextValue);\n    onChange === null || onChange === void 0 ? void 0 : onChange(nextValue);\n  };\n\n  var onInternalChange = function onInternalChange(_ref2) {\n    var nextValue = _ref2.target.value;\n    triggerChange(nextValue);\n  };\n\n  var selectOption = function selectOption(option) {\n    var _getTextArea;\n\n    var _option$value = option.value,\n        mentionValue = _option$value === void 0 ? '' : _option$value;\n\n    var _replaceWithMeasure = replaceWithMeasure(mergedValue, {\n      measureLocation: mergedMeasureLocation,\n      targetText: mentionValue,\n      prefix: mergedMeasurePrefix,\n      selectionStart: (_getTextArea = getTextArea()) === null || _getTextArea === void 0 ? void 0 : _getTextArea.selectionStart,\n      split: split\n    }),\n        text = _replaceWithMeasure.text,\n        selectionLocation = _replaceWithMeasure.selectionLocation;\n\n    triggerChange(text);\n    stopMeasure(function () {\n      // We need restore the selection position\n      setInputSelection(getTextArea(), selectionLocation);\n    });\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(option, mergedMeasurePrefix);\n  }; // ============================= KeyEvent =============================\n  // Check if hit the measure keyword\n\n\n  var onInternalKeyDown = function onInternalKeyDown(event) {\n    var which = event.which;\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event); // Skip if not measuring\n\n    if (!mergedMeasuring) {\n      return;\n    }\n\n    if (which === KeyCode.UP || which === KeyCode.DOWN) {\n      // Control arrow function\n      var optionLen = options.length;\n      var offset = which === KeyCode.UP ? -1 : 1;\n      var newActiveIndex = (activeIndex + offset + optionLen) % optionLen;\n      setActiveIndex(newActiveIndex);\n      event.preventDefault();\n    } else if (which === KeyCode.ESC) {\n      stopMeasure();\n    } else if (which === KeyCode.ENTER) {\n      // Measure hit\n      event.preventDefault();\n\n      if (!options.length) {\n        stopMeasure();\n        return;\n      }\n\n      var option = options[activeIndex];\n      selectOption(option);\n    }\n  };\n  /**\n   * When to start measure:\n   * 1. When user press `prefix`\n   * 2. When measureText !== prevMeasureText\n   *  - If measure hit\n   *  - If measuring\n   *\n   * When to stop measure:\n   * 1. Selection is out of range\n   * 2. Contains `space`\n   * 3. ESC or select one\n   */\n\n\n  var onInternalKeyUp = function onInternalKeyUp(event) {\n    var key = event.key,\n        which = event.which;\n    var target = event.target;\n    var selectionStartText = getBeforeSelectionText(target);\n\n    var _getLastMeasureIndex = getLastMeasureIndex(selectionStartText, mergedPrefix),\n        measureIndex = _getLastMeasureIndex.location,\n        nextMeasurePrefix = _getLastMeasureIndex.prefix; // If the client implements an onKeyUp handler, call it\n\n\n    onKeyUp === null || onKeyUp === void 0 ? void 0 : onKeyUp(event); // Skip if match the white key list\n\n    if ([KeyCode.ESC, KeyCode.UP, KeyCode.DOWN, KeyCode.ENTER].indexOf(which) !== -1) {\n      return;\n    }\n\n    if (measureIndex !== -1) {\n      var nextMeasureText = selectionStartText.slice(measureIndex + nextMeasurePrefix.length);\n      var validateMeasure = validateSearch(nextMeasureText, mergedProps);\n      var matchOption = !!getOptions(nextMeasureText).length;\n\n      if (validateMeasure) {\n        if (key === nextMeasurePrefix || key === 'Shift' || mergedMeasuring || nextMeasureText !== mergedMeasureText && matchOption) {\n          startMeasure(nextMeasureText, nextMeasurePrefix, measureIndex);\n        }\n      } else if (mergedMeasuring) {\n        // Stop if measureText is invalidate\n        stopMeasure();\n      }\n      /**\n       * We will trigger `onSearch` to developer since they may use for async update.\n       * If met `space` means user finished searching.\n       */\n\n\n      if (onSearch && validateMeasure) {\n        onSearch(nextMeasureText, nextMeasurePrefix);\n      }\n    } else if (mergedMeasuring) {\n      stopMeasure();\n    }\n  };\n\n  var onInternalPressEnter = function onInternalPressEnter(event) {\n    if (!mergedMeasuring && onPressEnter) {\n      onPressEnter(event);\n    }\n  }; // ============================ Focus Blur ============================\n\n\n  var focusRef = useRef();\n\n  var onInternalFocus = function onInternalFocus(event) {\n    window.clearTimeout(focusRef.current);\n\n    if (!isFocus && event && onFocus) {\n      onFocus(event);\n    }\n\n    setIsFocus(true);\n  };\n\n  var onInternalBlur = function onInternalBlur(event) {\n    focusRef.current = window.setTimeout(function () {\n      setIsFocus(false);\n      stopMeasure();\n      onBlur === null || onBlur === void 0 ? void 0 : onBlur(event);\n    }, 0);\n  };\n\n  var onDropdownFocus = function onDropdownFocus() {\n    onInternalFocus();\n  };\n\n  var onDropdownBlur = function onDropdownBlur() {\n    onInternalBlur();\n  }; // ============================== Render ==============================\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(prefixCls, className),\n    style: style\n  }, /*#__PURE__*/React.createElement(TextArea, _extends({\n    ref: textareaRef,\n    value: mergedValue\n  }, restProps, {\n    onChange: onInternalChange,\n    onKeyDown: onInternalKeyDown,\n    onKeyUp: onInternalKeyUp,\n    onPressEnter: onInternalPressEnter,\n    onFocus: onInternalFocus,\n    onBlur: onInternalBlur\n  })), mergedMeasuring && /*#__PURE__*/React.createElement(\"div\", {\n    ref: measureRef,\n    className: \"\".concat(prefixCls, \"-measure\")\n  }, mergedValue.slice(0, mergedMeasureLocation), /*#__PURE__*/React.createElement(MentionsContext.Provider, {\n    value: {\n      notFoundContent: notFoundContent,\n      activeIndex: activeIndex,\n      setActiveIndex: setActiveIndex,\n      selectOption: selectOption,\n      onFocus: onDropdownFocus,\n      onBlur: onDropdownBlur\n    }\n  }, /*#__PURE__*/React.createElement(KeywordTrigger, {\n    prefixCls: prefixCls,\n    transitionName: transitionName,\n    placement: placement,\n    direction: direction,\n    options: options,\n    visible: true,\n    getPopupContainer: getPopupContainer,\n    dropdownClassName: dropdownClassName\n  }, /*#__PURE__*/React.createElement(\"span\", null, mergedMeasurePrefix))), mergedValue.slice(mergedMeasureLocation + mergedMeasurePrefix.length)));\n});\nMentions.defaultProps = {\n  prefixCls: 'rc-mentions',\n  prefix: '@',\n  split: ' ',\n  validateSearch: defaultValidateSearch,\n  filterOption: defaultFilterOption,\n  notFoundContent: 'Not Found',\n  rows: 1\n};\nMentions.Option = Option;\nexport default Mentions;"]},"metadata":{},"sourceType":"module"}